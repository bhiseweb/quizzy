!function(window){"use strict";var applicationModuleName="mean",service={applicationEnvironment:window.env,applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ngFileUpload","ui-notification"],registerModule:function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)}};window.ApplicationConfiguration=service,angular.module("ui-notification").config(["NotificationProvider",function(NotificationProvider){NotificationProvider.setOptions({delay:2e3,startTop:20,startRight:10,verticalSpacing:20,horizontalSpacing:20,positionX:"right",positionY:"bottom"})}])}(window);
!function(app){"use strict";function bootstrapConfig($compileProvider,$locationProvider,$httpProvider,$logProvider){$locationProvider.html5Mode({enabled:!0,requireBase:!1}).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor"),$compileProvider.debugInfoEnabled("production"!==app.applicationEnvironment),$logProvider.debugEnabled("production"!==app.applicationEnvironment)}angular.module(app.applicationModuleName,app.applicationModuleVendorDependencies),angular.module(app.applicationModuleName).config(bootstrapConfig),bootstrapConfig.$inject=["$compileProvider","$locationProvider","$httpProvider","$logProvider"],angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[app.applicationModuleName])})}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("articles",["core"]),app.registerModule("articles.admin",["core.admin"]),app.registerModule("articles.admin.routes",["core.admin.routes"]),app.registerModule("articles.services"),app.registerModule("articles.routes",["ui.router","core.routes","articles.services"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("chat",["core"]),app.registerModule("chat.routes",["ui.router","core.routes"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("core"),app.registerModule("core.routes",["ui.router"]),app.registerModule("core.admin",["core"]),app.registerModule("core.admin.routes",["ui.router"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("users"),app.registerModule("users.admin"),app.registerModule("users.admin.routes",["ui.router","core.routes","users.admin.services"]),app.registerModule("users.admin.services"),app.registerModule("users.routes",["ui.router","core.routes"]),app.registerModule("users.services")}(ApplicationConfiguration);
!function(){"use strict";function menuConfig(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Quiz Questions",state:"admin.articles.list"})}angular.module("articles.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin.articles",{abstract:!0,url:"/articles",template:"<ui-view/>"}).state("admin.articles.list",{url:"",templateUrl:"/modules/articles/client/views/admin/list-articles.client.view.html",controller:"ArticlesAdminListController",controllerAs:"vm",data:{roles:["admin"]}}).state("admin.articles.create",{url:"/create",templateUrl:"/modules/articles/client/views/admin/form-article.client.view.html",controller:"ArticlesAdminController",controllerAs:"vm",data:{roles:["admin"]},resolve:{articleResolve:newArticle}}).state("admin.articles.edit",{url:"/:articleId/edit",templateUrl:"/modules/articles/client/views/admin/form-article.client.view.html",controller:"ArticlesAdminController",controllerAs:"vm",data:{roles:["admin"]},resolve:{articleResolve:getArticle}})}function getArticle($stateParams,ArticlesService){return ArticlesService.get({articleId:$stateParams.articleId}).$promise}function newArticle(ArticlesService){return new ArticlesService}angular.module("articles.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getArticle.$inject=["$stateParams","ArticlesService"],newArticle.$inject=["ArticlesService"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Quiz",state:"articles",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","articles",{title:"Start Quiz",state:"articles.list",roles:["*"]})}angular.module("articles").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("articles",{abstract:!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"/modules/articles/client/views/articles.client.quiz-view.html",data:{pageTitle:"Articles List"}}).state("articles.view",{url:"/results",templateUrl:"/modules/articles/client/views/view-article.client.view.html",data:{pageTitle:"Quiz Result"}})}angular.module("articles.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],function($stateParams,ArticlesService){return ArticlesService.get({articleId:$stateParams.articleId}).$promise}.$inject=["$stateParams","ArticlesService"]}();
!function(){function ListController(quizMetrics,DataService){var vm=this;vm.quizMetrics=quizMetrics,vm.data=DataService.turtlesData,vm.activeTurtle={},vm.changeActiveTurtle=function(index){vm.activeTurtle=index},vm.activateQuiz=function(){quizMetrics.changeState("quiz",!0)},vm.search=""}angular.module("articles").controller("listCtrl",ListController),ListController.$inject=["quizMetrics","DataService"]}();
!function(){"use strict";function QuizController(quizMetrics,DataService,ArticlesService,$state){function setActiveQuestion(index){if(void 0===index)for(var breakOut=!1,quizLength=DataService.quizQuestions.length-1;!breakOut;)vm.activeQuestion=vm.activeQuestion<quizLength?++vm.activeQuestion:0,0===vm.activeQuestion&&(vm.error=!0),null===DataService.quizQuestions[vm.activeQuestion].selected&&(breakOut=!0);else vm.activeQuestion=index}var vm=this;vm.quizMetrics=quizMetrics,vm.dataService=DataService,vm.questionAnswered=function(){var quizLength=DataService.quizQuestions.length;numQuestionsAnswered=0;for(var x=0;x<quizLength;x++)if(null!==DataService.quizQuestions[vm.activeQuestion].selected&&++numQuestionsAnswered>=quizLength){for(var i=0;i<quizLength;i++)if(null===DataService.quizQuestions[i].selected)return void setActiveQuestion(i);return vm.error=!1,void(vm.finalise=!0)}vm.setActiveQuestion()},vm.setActiveQuestion=setActiveQuestion,vm.selectAnswer=function(index){DataService.quizQuestions[vm.activeQuestion].selected=index},vm.finaliseAnswers=function(){vm.finalise=!1,numQuestionsAnswered=0,vm.activeQuestion=0,quizMetrics.markQuiz(),quizMetrics.changeState("quiz",!1),quizMetrics.changeState("results",!0)},vm.activeQuestion=0,vm.error=!1,vm.finalise=!1;var numQuestionsAnswered=0}angular.module("articles").controller("quizCtrl",QuizController),QuizController.$inject=["quizMetrics","DataService","ArticlesService","$state"]}();
!function(){"use strict";function ArticlesController($scope,article,Authentication){var vm=this;vm.article=article,vm.authentication=Authentication}angular.module("articles").controller("ArticlesController",ArticlesController),ArticlesController.$inject=["$scope","articleResolve","Authentication"]}();
!function(){function ResultsController(quizMetrics,DataService,ArticlesService){var vm=this;vm.quizMetrics=quizMetrics,vm.dataService=DataService,vm.getAnswerClass=function(index){return index===quizMetrics.correctAnswers[vm.activeQuestion]?"bg-success":index===DataService.quizQuestions[vm.activeQuestion].selected?"bg-danger":void 0},vm.setActiveQuestion=function(index){vm.activeQuestion=index},vm.reset=function(){quizMetrics.changeState("results",!1),quizMetrics.numCorrect=0;for(var i=0;i<DataService.quizQuestions.length;i++){var data=DataService.quizQuestions[i];data.selected=null,data.correct=null}},vm.calculatePerc=function(){return quizMetrics.numCorrect/DataService.quizQuestions.length*100},vm.activeQuestion=0}angular.module("articles").controller("resultsCtrl",ResultsController),ResultsController.$inject=["quizMetrics","DataService","ArticlesService"]}();
!function(){function DataService(ArticlesService){var corAns=[],dataObj=(ArticlesService.query(function(data){for(var i=0;i<data.length;i++)angular.forEach(data[i].correct_answers,function(value){this.push(value)},corAns)}),{turtlesData:turtlesData,quizQuestions:ArticlesService.query(),correctAnswers:corAns});return console.log(dataObj),dataObj}angular.module("articles.services").factory("DataService",DataService),DataService.$inject=["ArticlesService"];var turtlesData=[{type:"Green Turtle",image_url:"http://www.what-do-turtles-eat.com/wp-content/uploads/2014/10/Sea-Turtles-Habitat.jpg",locations:"Tropical and subtropical oceans worldwide",size:"Up to 1.5m and up to 300kg",lifespan:"Over 80 years",diet:"Herbivore",description:"The green turtle is a large, weighty sea turtle with a wide, smooth carapace, or shell. It inhabits tropical and subtropical coastal waters around the world and has been observed clambering onto land to sunbathe. It is named not for the color of its shell, which is normally brown or olive depending on its habitat, but for the greenish color of its skin. There are two types of green turtles—scientists are currently debating whether they are subspecies or separate species—including the Atlantic green turtle, normally found off the shores of Europe and North America, and the Eastern Pacific green turtle, which has been found in coastal waters from Alaska to Chile."},{type:"Loggerhead Turtle",image_url:"http://i.telegraph.co.uk/multimedia/archive/02651/loggerheadTurtle_2651448b.jpg",locations:"Tropical and subtropical oceans worldwide",size:"90cm, 115kg",lifespan:"More than 50 years",diet:"Carnivore",description:"Loggerhead turtles are the most abundant of all the marine turtle species in U.S. waters. But persistent population declines due to pollution, shrimp trawling, and development in their nesting areas, among other factors, have kept this wide-ranging seagoer on the threatened species list since 1978. Their enormous range encompasses all but the most frigid waters of the world's oceans. They seem to prefer coastal habitats, but often frequent inland water bodies and will travel hundreds of miles out to sea."},{type:"Leatherback Turtle",image_url:"https://static-secure.guim.co.uk/sys-images/Guardian/Pix/pictures/2011/8/13/1313246505515/Leatherback-turtle-007.jpg",locations:"All tropical and subtropical oceans",size:"Up to 2m, up to 900kg",lifespan:"45 years",diet:"Carnivore",description:"Leatherbacks are the largest turtles on Earth, growing up to seven feet (two meters) long and exceeding 2,000 pounds (900 kilograms). These reptilian relics are the only remaining representatives of a family of turtles that traces its evolutionary roots back more than 100 million years. Once prevalent in every ocean except the Arctic and Antarctic, the leatherback population is rapidly declining in many parts of the world. While all other sea turtles have hard, bony shells, the inky-blue carapace of the leatherback is somewhat flexible and almost rubbery to the touch. Ridges along the carapace help give it a more hydrodynamic structure. Leatherbacks can dive to depths of 4,200 feet (1,280 meters)—deeper than any other turtle—and can stay down for up to 85 minutes."},{type:"Hawksbill Sea Turtle",image_url:"http://assets.worldwildlife.org/photos/163/images/carousel_small/SCR_290360hawskbill-why-matter-LG.jpg?1345565532",locations:"Tropical Coastal areas around the world",size:"Over 1m, 45-68kg",lifespan:"30-50 Years",diet:"Carnivore",description:"Dolor possimus voluptas hic aliquam rem doloremque minus maiores accusantium? Laborum perferendis harum blanditiis quod quia? Aspernatur sunt et fuga delectus ab rem excepturi. Ipsa quibusdam facere consequuntur magnam vitae? Consectetur consectetur necessitatibus beatae delectus quibusdam in! Est nobis omnis iusto illum fugiat maxime! Neque fugiat reiciendis sequi corrupti minima facere distinctio aliquam est voluptatibus. Sint incidunt soluta atque ducimus."},{type:"Alligator Snapping Turtle",image_url:"https://upload.wikimedia.org/wikipedia/commons/e/e3/Alligator_snapping_turtle_-_Geierschildkr%C3%B6te_-_Alligatorschildkr%C3%B6te_-_Macrochelys_temminckii_01.jpg",locations:"Along the Atlantic Coast of USA",size:"around 60cm, up to 100kg",lifespan:"20-70 years",diet:"Carnivore",description:"The prehistoric-looking alligator snapping turtle is the largest freshwater turtle in North America and among the largest in the world. With its spiked shell, beaklike jaws, and thick, scaled tail, this species is often referred to as the 'dinosaur of the turtle world.' Found almost exclusively in the rivers, canals, and lakes of the southeastern United States, alligator snappers can live to be 50 to 100 years old. Males average 26 inches (66 centimeters) in shell length and weigh about 175 pounds (80 kilograms), although they have been known to exceed 220 pounds (100 kilograms). The much smaller females top out at around 50 pounds (23 kilograms)."},{type:"Kemp's Ridley Sea Turtle",image_url:"https://upload.wikimedia.org/wikipedia/commons/7/7f/Kemp's_Ridley_sea_turtle_nesting.JPG",locations:"Coastal areas of the North Atlantic",size:"65cm, up to 45kg",lifespan:"Around 50 years",diet:"Omnivore",description:"The Kemp’s ridley turtle is the world’s most endangered sea turtle, and with a worldwide female nesting population roughly estimated at just 1,000 individuals, its survival truly hangs in the balance. Their perilous situation is attributed primarily to the over-harvesting of their eggs during the last century. And though their nesting grounds are protected and many commercial fishing fleets now use turtle excluder devices in their nets, these turtles have not been able to rebound. For this reason, their nesting processions, called arribadas, make for especially high drama. During an arribada, females take over entire portions of beaches, lugging their big bodies through the sand with their flippers until they find a satisfying spot to lay their eggs. Even more riveting is the later struggle to the ocean of each tiny, vulnerable hatchling. Beset by predators, hatchlings make this journey at night, breaking out of their shells using their caruncle, a single temporary tooth grown just for this purpose."},{type:"Olive Ridley Turtle",image_url:"http://images.nationalgeographic.com/wpf/media-live/photos/000/006/cache/ridley-sea-turtle_688_600x450.jpg",locations:"Tropical coastal areas around the world",size:"70cm, 45kg",lifespan:"50 years",diet:"Omnivore",description:"The olive ridley turtle is named for the generally greenish color of its skin and shell, or carapace. It is closely related to the Kemp’s ridley, with the primary distinction being that olive ridleys are found only in warmer waters, including the southern Atlantic, Pacific and Indian Oceans. Olive and Kemp’s ridleys are the smallest of the sea turtles, weighing up to 100 pounds (45 kilograms) and reaching only about 2 feet (65 centimeters) in shell length. The olive ridley has a slightly smaller head and smaller shell than the Kemp’s."},{type:"Eastern Snake Necked Turtle",image_url:"https://c1.staticflickr.com/3/2182/2399413165_bcc8031cac_z.jpg?zz=1",locations:"Eastern Australia",size:"Up to 30cm",lifespan:"25 years",diet:"Carnivore",description:"Snake-necked turtles, as the name suggests, have an unusually long neck. Their necks may be up to 60 percent of their carapace length. Their carapace is oval and flattened, usually dark-brown to black measuring up to 11 inches (27.5 cm) in length. Scutes are shed as the animals grow. The males have a longer, thicker tail than females and a concave plastron. They are excellent swimmers; they have large, webbed feet with sharp claws used to tear apart food."}]}();
!function(){function QuizMetrics(DataService){var quizObj={quizActive:!1,resultsActive:!1,changeState:function(metric,state){if("quiz"===metric)quizObj.quizActive=state;else{if("results"!==metric)return!1;quizObj.resultsActive=state}},correctAnswers:[],markQuiz:function(){quizObj.correctAnswers=DataService.correctAnswers;for(var i=0;i<DataService.quizQuestions.length;i++)DataService.quizQuestions[i].selected===DataService.correctAnswers[i]?(DataService.quizQuestions[i].correct=!0,quizObj.numCorrect++):DataService.quizQuestions[i].correct=!1},numCorrect:0};return quizObj}angular.module("articles.services").factory("quizMetrics",QuizMetrics),QuizMetrics.$inject=["DataService"]}();
!function(){"use strict";function ArticlesService($resource,$log){function createOrUpdate(article){function onSuccess(article){}function onError(errorResponse){handleError(errorResponse.data)}return article._id?article.$update(onSuccess,onError):article.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Article=$resource("/api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}});return angular.extend(Article.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Article}angular.module("articles.services").factory("ArticlesService",ArticlesService),ArticlesService.$inject=["$resource","$log"]}();
!function(){"use strict";function menuConfig(menuService){}angular.module("chat").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"/modules/chat/client/views/chat.client.view.html",controller:"ChatController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Chat"}})}angular.module("chat.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function ChatController($scope,$state,Authentication,Socket){var vm=this;vm.messages=[],vm.messageText="",vm.sendMessage=function(){var message={text:vm.messageText};Socket.emit("chatMessage",message),vm.messageText=""},Authentication.user||$state.go("home"),Socket.socket||Socket.connect(),Socket.on("chatMessage",function(message){vm.messages.unshift(message)}),$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}angular.module("chat").controller("ChatController",ChatController),ChatController.$inject=["$scope","$state","Authentication","Socket"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}angular.module("core.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin",{abstract:!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}angular.module("core.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenu("account",{roles:["user"]}),menuService.addMenuItem("account",{title:"",state:"settings",type:"dropdown",roles:["user"]}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile",state:"settings.profile"}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile Picture",state:"settings.picture"}),menuService.addSubMenuItem("account","settings",{title:"Change Password",state:"settings.password"}),menuService.addSubMenuItem("account","settings",{title:"Manage Social Accounts",state:"settings.accounts"})}angular.module("core").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeFilter($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){for(var allowed=!1,i=0,roles=toState.data.roles;i<roles.length;i++)if("guest"===roles[i]||Authentication.user&&void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(roles[i])){allowed=!0;break}allowed||(event.preventDefault(),null!==Authentication.user&&"object"==typeof Authentication.user?$state.transitionTo("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}angular.module("core").run(routeFilter),routeFilter.$inject=["$rootScope","$state","Authentication"]}();
!function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.rule(function($injector,$location){var path=$location.path();if(path.length>1&&"/"===path[path.length-1]){var newPath=path.substr(0,path.length-1);$location.replace().path(newPath)}}),$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"/modules/core/client/views/home.client.view.html",controller:"HomeController",controllerAs:"vm"}).state("not-found",{url:"/not-found",templateUrl:"/modules/core/client/views/404.client.view.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function($stateParams){return $stateParams.message}]},data:{ignoreState:!0,pageTitle:"Not Found"}}).state("bad-request",{url:"/bad-request",templateUrl:"/modules/core/client/views/400.client.view.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function($stateParams){return $stateParams.message}]},data:{ignoreState:!0,pageTitle:"Bad Request"}}).state("forbidden",{url:"/forbidden",templateUrl:"/modules/core/client/views/403.client.view.html",data:{ignoreState:!0,pageTitle:"Forbidden"}})}angular.module("core.routes").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}();
!function(){"use strict";function ErrorController($stateParams){var vm=this;vm.errorMessage=null,$stateParams.message&&(vm.errorMessage=$stateParams.message)}angular.module("core").controller("ErrorController",ErrorController),ErrorController.$inject=["$stateParams"]}();
!function(){"use strict";function HeaderController($scope,$state,Authentication,menuService){var vm=this;vm.accountMenu=menuService.getMenu("account").items[0],vm.authentication=Authentication,vm.isCollapsed=!1,vm.menu=menuService.getMenu("topbar"),$scope.$on("$stateChangeSuccess",function(){vm.isCollapsed=!1})}angular.module("core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","$state","Authentication","menuService"]}();
!function(){"use strict";angular.module("core").controller("HomeController",function(){})}();
!function(){"use strict";function autofocus($timeout,$window){return{restrict:"A",link:function(scope,element,attrs){$window.innerWidth>=800&&$timeout(function(){var el=element[0];el.focus(),el.selectionStart=el.selectionEnd=el.value.length},100)}}}angular.module("core").directive("autofocus",autofocus),autofocus.$inject=["$timeout","$window"]}();
!function(){"use strict";function pageTitle($rootScope,$interpolate,$state){return{restrict:"A",link:function(scope,element){$rootScope.$on("$stateChangeSuccess",function(event,toState){if(toState.data&&toState.data.pageTitle){var stateTitle=$interpolate(toState.data.pageTitle)($state.$current.locals.globals);element.html("QuizzY - "+stateTitle)}else element.html("QuizzY")})}}}angular.module("core").directive("pageTitle",pageTitle),pageTitle.$inject=["$rootScope","$interpolate","$state"]}();
!function(){"use strict";function showErrors($timeout,$interpolate){return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw new Error("show-errors element does not have the 'form-group' or 'input-group' class");return function(scope,el,attrs,formCtrl){function toggleClasses(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}var inputEl,inputName,inputNgEl,options,showSuccess,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),!(inputName=$interpolate(inputNgEl.attr("name")||"")(scope)))throw new Error("show-errors element has no child input elements with a 'name' attribute class");scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},toggleClasses),scope.$on("show-errors-check-validity",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}),scope.$on("show-errors-reset",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)})}}}}angular.module("core").directive("showErrors",showErrors),showErrors.$inject=["$timeout","$interpolate"]}();
!function(){"use strict";angular.module("core").factory("menuService",function(){function addMenu(menuId,options){return options=options||{},service.menus[menuId]={roles:options.roles||service.defaultRoles,items:options.items||[],shouldRender:shouldRender},service.menus[menuId]}var shouldRender,service={addMenu:addMenu,addMenuItem:function(menuId,options){return service.validateMenuExistence(menuId),options=options||{},service.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item",class:options.class,roles:null===options.roles||void 0===options.roles?service.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items&&options.items.forEach(function(subMenuItem){service.addSubMenuItem(menuId,options.state,subMenuItem)}),service.menus[menuId]},addSubMenuItem:function(menuId,parentItemState,options){return options=options||{},service.validateMenuExistence(menuId),service.menus[menuId].items.filter(function(item){return item.state===parentItemState}).forEach(function(item){item.items.push({title:options.title||"",state:options.state||"",params:options.params||{},roles:null===options.roles||void 0===options.roles?item.roles:options.roles,position:options.position||0,shouldRender:shouldRender})}),service.menus[menuId]},defaultRoles:["user","admin"],getMenu:function(menuId){return service.validateMenuExistence(menuId),service.menus[menuId]},menus:{},removeMenu:function(menuId){service.validateMenuExistence(menuId),delete service.menus[menuId]},removeMenuItem:function(menuId,menuItemState){return service.validateMenuExistence(menuId),service.menus[menuId].items=service.menus[menuId].items.filter(function(item){return item.state!==menuItemState}),service.menus[menuId]},removeSubMenuItem:function(menuId,subMenuItemState){return service.validateMenuExistence(menuId),service.menus[menuId].items.forEach(function(parentMenuItem){parentMenuItem.items=parentMenuItem.items.filter(function(subMenuItem){return subMenuItem.state!==subMenuItemState})}),service.menus[menuId]},validateMenuExistence:function(menuId){if(!menuId||!menuId.length)throw new Error("MenuId was not provided");if(!service.menus[menuId])throw new Error("Menu does not exist");return!0}};return shouldRender=function(user){return-1!==this.roles.indexOf("*")||!!user&&user.roles.filter(function(userRole){return-1!==this.roles.indexOf(userRole)},this).length>0},addMenu("topbar",{roles:["*"]}),service})}();
!function(){"use strict";function Socket(Authentication,$state,$timeout){function connect(){Authentication.user&&(service.socket=io())}var service={connect:connect,emit:function(eventName,data){service.socket&&service.socket.emit(eventName,data)},on:function(eventName,callback){service.socket&&service.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},removeListener:function(eventName){service.socket&&service.socket.removeListener(eventName)},socket:null};return connect(),service}angular.module("core").factory("Socket",Socket),Socket.$inject=["Authentication","$state","$timeout"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}angular.module("users.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){function getUser($stateParams,AdminService){return AdminService.get({userId:$stateParams.userId}).$promise}$stateProvider.state("admin.users",{url:"/users",templateUrl:"/modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController",controllerAs:"vm",data:{pageTitle:"Users List"}}).state("admin.user",{url:"/users/:userId",templateUrl:"/modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit {{ userResolve.displayName }}"}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"/modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit User {{ userResolve.displayName }}"}}),getUser.$inject=["$stateParams","AdminService"]}angular.module("users.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("settings",{abstract:!0,url:"/settings",templateUrl:"/modules/users/client/views/settings/settings.client.view.html",controller:"SettingsController",controllerAs:"vm",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"/modules/users/client/views/settings/edit-profile.client.view.html",controller:"EditProfileController",controllerAs:"vm",data:{pageTitle:"Settings"}}).state("settings.password",{url:"/password",templateUrl:"/modules/users/client/views/settings/change-password.client.view.html",controller:"ChangePasswordController",controllerAs:"vm",data:{pageTitle:"Settings password"}}).state("settings.accounts",{url:"/accounts",templateUrl:"/modules/users/client/views/settings/manage-social-accounts.client.view.html",controller:"SocialAccountsController",controllerAs:"vm",data:{pageTitle:"Settings accounts"}}).state("settings.picture",{url:"/picture",templateUrl:"/modules/users/client/views/settings/change-profile-picture.client.view.html",controller:"ChangeProfilePictureController",controllerAs:"vm",data:{pageTitle:"Settings picture"}}).state("authentication",{abstract:!0,url:"/authentication",templateUrl:"/modules/users/client/views/authentication/authentication.client.view.html",controller:"AuthenticationController",controllerAs:"vm"}).state("authentication.signup",{url:"/signup",templateUrl:"/modules/users/client/views/authentication/signup.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signup"}}).state("authentication.signin",{url:"/signin?err",templateUrl:"/modules/users/client/views/authentication/signin.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signin"}}).state("password",{abstract:!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"/modules/users/client/views/password/forgot-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password forgot"}}).state("password.reset",{abstract:!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"/modules/users/client/views/password/reset-password-invalid.client.view.html",data:{pageTitle:"Password reset invalid"}}).state("password.reset.success",{url:"/success",templateUrl:"/modules/users/client/views/password/reset-password-success.client.view.html",data:{pageTitle:"Password reset success"}}).state("password.reset.form",{url:"/:token",templateUrl:"/modules/users/client/views/password/reset-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password reset form"}})}angular.module("users.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function AuthenticationController($scope,$state,UsersService,$location,$window,Authentication,PasswordValidator,Notification){function onUserSignupSuccess(response){vm.authentication.user=response,Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Signup successful!'}),$state.go($state.previous.state.name||"home",$state.previous.params)}function onUserSignupError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signup Error!',delay:6e3})}function onUserSigninSuccess(response){vm.authentication.user=response,Notification.info({message:"Welcome "+response.firstName}),$state.go($state.previous.state.name||"home",$state.previous.params)}function onUserSigninError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signin Error!',delay:6e3})}var vm=this;vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.signup=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;UsersService.userSignup(vm.credentials).then(onUserSignupSuccess).catch(onUserSignupError)},vm.signin=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;UsersService.userSignin(vm.credentials).then(onUserSigninSuccess).catch(onUserSigninError)},vm.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url},vm.usernameRegex=/^(?=[\w.-]+$)(?!.*[._-]{2})(?!\.)(?!.*\.$).{3,34}$/,$location.search().err&&Notification.error({message:$location.search().err}),vm.authentication.user&&$location.path("/")}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$state","UsersService","$location","$window","Authentication","PasswordValidator","Notification"]}();
!function(){"use strict";function PasswordController($scope,$stateParams,UsersService,$location,Authentication,PasswordValidator,Notification){function onRequestPasswordResetSuccess(response){vm.credentials=null,Notification.success({message:response.message,title:'<i class="glyphicon glyphicon-ok"></i> Password reset email sent successfully!'})}function onRequestPasswordResetError(response){vm.credentials=null,Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to send password reset email!',delay:4e3})}function onResetPasswordSuccess(response){vm.passwordDetails=null,Authentication.user=response,Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Password reset successful!'}),$location.path("/password/reset/success")}function onResetPasswordError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password reset failed!',delay:4e3})}var vm=this;vm.resetUserPassword=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.resetPasswordForm"),!1;UsersService.resetPassword($stateParams.token,vm.passwordDetails).then(onResetPasswordSuccess).catch(onResetPasswordError)},vm.askForPasswordReset=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.forgotPasswordForm"),!1;UsersService.requestPasswordReset(vm.credentials).then(onRequestPasswordResetSuccess).catch(onRequestPasswordResetError)},vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.authentication.user&&$location.path("/")}angular.module("users").controller("PasswordController",PasswordController),PasswordController.$inject=["$scope","$stateParams","UsersService","$location","Authentication","PasswordValidator","Notification"]}();
!function(){"use strict";function passwordValidator(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.getPopoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.getPopoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}angular.module("users").directive("passwordValidator",passwordValidator),passwordValidator.$inject=["PasswordValidator"]}();
!function(){"use strict";angular.module("users").directive("passwordVerify",function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){return scope.passwordVerify===password})})}}})}();
!function(){"use strict";angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}})}();
!function(){"use strict";function Authentication($window){return{user:$window.user}}angular.module("users.services").factory("Authentication",Authentication),Authentication.$inject=["$window"]}();
!function(){"use strict";function PasswordValidator($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){return owaspPasswordStrengthTest.test(password)},getPopoverMsg:function(){return"Please enter a passphrase or password with "+owaspPasswordStrengthTest.configs.minLength+" or more characters, numbers, lowercase, uppercase, and special characters."}}}angular.module("users.services").factory("PasswordValidator",PasswordValidator),PasswordValidator.$inject=["$window"]}();
!function(){"use strict";function UsersService($resource){var Users=$resource("/api/users",{},{update:{method:"PUT"},updatePassword:{method:"POST",url:"/api/users/password"},deleteProvider:{method:"DELETE",url:"/api/users/accounts",params:{provider:"@provider"}},sendPasswordResetToken:{method:"POST",url:"/api/auth/forgot"},resetPasswordWithToken:{method:"POST",url:"/api/auth/reset/:token"},signup:{method:"POST",url:"/api/auth/signup"},signin:{method:"POST",url:"/api/auth/signin"}});return angular.extend(Users,{changePassword:function(passwordDetails){return this.updatePassword(passwordDetails).$promise},removeSocialAccount:function(provider){return this.deleteProvider({provider:provider}).$promise},requestPasswordReset:function(credentials){return this.sendPasswordResetToken(credentials).$promise},resetPassword:function(token,passwordDetails){return this.resetPasswordWithToken({token:token},passwordDetails).$promise},userSignup:function(credentials){return this.signup(credentials).$promise},userSignin:function(credentials){return this.signin(credentials).$promise}}),Users}function AdminService($resource){return $resource("/api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}angular.module("users.services").factory("UsersService",UsersService),UsersService.$inject=["$resource"],angular.module("users.admin.services").factory("AdminService",AdminService),AdminService.$inject=["$resource"]}();
!function(){"use strict";function ArticlesAdminController($scope,$state,$window,article,Authentication,Notification){var vm=this;vm.article=article,vm.authentication=Authentication,vm.form={},vm.remove=function(){$window.confirm("Are you sure you want to delete?")&&vm.article.$remove(function(){$state.go("admin.articles.list"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Article deleted successfully!'})})},vm.save=function(isValid){if(vm.article.options=[],vm.article.options.push(vm.option1,vm.option2,vm.option3,vm.option4),console.log(vm.article.options),!isValid)return $scope.$broadcast("show-errors-check-validity","vm.form.articleForm"),!1;vm.article.createOrUpdate().then(function(res){$state.go("admin.articles.list"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Article saved successfully!'})}).catch(function(res){Notification.error({message:res.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Article save error!'})})}}angular.module("articles.admin").controller("ArticlesAdminController",ArticlesAdminController),ArticlesAdminController.$inject=["$scope","$state","$window","articleResolve","Authentication","Notification"]}();
!function(){"use strict";function ArticlesAdminListController(ArticlesService){this.articles=ArticlesService.query()}angular.module("articles.admin").controller("ArticlesAdminListController",ArticlesAdminListController),ArticlesAdminListController.$inject=["ArticlesService"]}();
!function(){"use strict";function authInterceptor($q,$injector,Authentication){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 400:$injector.get("$state").go("bad-request",{message:rejection.data.message});break;case 401:Authentication.user=null,$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden");break;case 404:$injector.get("$state").go("not-found",{message:rejection.data.message});break;case-1:$injector.get("Notification").error({message:"No response received from server. Please try again later.",title:"Error processing request!",delay:5e3})}return $q.reject(rejection)}}}angular.module("core").factory("authInterceptor",authInterceptor),authInterceptor.$inject=["$q","$injector","Authentication"]}();
!function(){"use strict";function UserListController($scope,$filter,AdminService){var vm=this;vm.buildPager=function(){vm.pagedItems=[],vm.itemsPerPage=15,vm.currentPage=1,vm.figureOutItemsToDisplay()},vm.figureOutItemsToDisplay=function(){vm.filteredItems=$filter("filter")(vm.users,{$:vm.search}),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)},vm.pageChanged=function(){vm.figureOutItemsToDisplay()},AdminService.query(function(data){vm.users=data,vm.buildPager()})}angular.module("users.admin").controller("UserListController",UserListController),UserListController.$inject=["$scope","$filter","AdminService"]}();
!function(){"use strict";function UserController($scope,$state,$window,Authentication,user,Notification){var vm=this;vm.authentication=Authentication,vm.user=user,vm.remove=function(user){$window.confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),vm.users.splice(vm.users.indexOf(user),1),Notification.success("User deleted successfully!")):vm.user.$remove(function(){$state.go("admin.users"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User deleted successfully!'})}))},vm.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;var user=vm.user;user.$update(function(){$state.go("admin.user",{userId:user._id}),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User saved successfully!'})},function(errorResponse){Notification.error({message:errorResponse.data.message,title:'<i class="glyphicon glyphicon-remove"></i> User update error!'})})},vm.isContextUserSelf=function(){return vm.user.username===vm.authentication.user.username}}angular.module("users.admin").controller("UserController",UserController),UserController.$inject=["$scope","$state","$window","Authentication","userResolve","Notification"]}();
!function(){"use strict";function ChangePasswordController($scope,$http,Authentication,UsersService,PasswordValidator,Notification){function onChangePasswordSuccess(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Password Changed Successfully'}),vm.passwordDetails=null}function onChangePasswordError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password change failed!'})}var vm=this;vm.user=Authentication.user,vm.changeUserPassword=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.passwordForm"),!1;UsersService.changePassword(vm.passwordDetails).then(onChangePasswordSuccess).catch(onChangePasswordError)},vm.getPopoverMsg=PasswordValidator.getPopoverMsg}angular.module("users").controller("ChangePasswordController",ChangePasswordController),ChangePasswordController.$inject=["$scope","$http","Authentication","UsersService","PasswordValidator","Notification"]}();
!function(){"use strict";function ChangeProfilePictureController($timeout,Authentication,Upload,Notification){function onSuccessItem(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Successfully changed profile picture'}),vm.user=Authentication.user=response,vm.fileSelected=!1,vm.progress=0}function onErrorItem(response){vm.fileSelected=!1,vm.progress=0,Notification.error({message:response.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to change profile picture'})}var vm=this;vm.user=Authentication.user,vm.progress=0,vm.upload=function(dataUrl){Upload.upload({url:"/api/users/picture",data:{newProfilePicture:dataUrl}}).then(function(response){$timeout(function(){onSuccessItem(response.data)})},function(response){response.status>0&&onErrorItem(response.data)},function(evt){vm.progress=parseInt(100*evt.loaded/evt.total,10)})}}angular.module("users").controller("ChangeProfilePictureController",ChangeProfilePictureController),ChangeProfilePictureController.$inject=["$timeout","Authentication","Upload","Notification"]}();
!function(){"use strict";function EditProfileController($scope,$http,$location,UsersService,Authentication,Notification){var vm=this;vm.user=Authentication.user,vm.updateUserProfile=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;new UsersService(vm.user).$update(function(response){$scope.$broadcast("show-errors-reset","vm.userForm"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Edit profile successful!'}),Authentication.user=response},function(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Edit profile failed!'})})}}angular.module("users").controller("EditProfileController",EditProfileController),EditProfileController.$inject=["$scope","$http","$location","UsersService","Authentication","Notification"]}();
!function(){"use strict";function SocialAccountsController($state,$window,UsersService,Authentication,Notification){function onRemoveSocialAccountSuccess(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Removed successfully!'}),vm.user=Authentication.user=response}function onRemoveSocialAccountError(response){Notification.error({message:response.message,title:'<i class="glyphicon glyphicon-remove"></i> Remove failed!'})}var vm=this;vm.user=Authentication.user,vm.hasConnectedAdditionalSocialAccounts=function(){return vm.user.additionalProvidersData&&Object.keys(vm.user.additionalProvidersData).length},vm.isConnectedSocialAccount=function(provider){return vm.user.provider===provider||vm.user.additionalProvidersData&&vm.user.additionalProvidersData[provider]},vm.removeUserSocialAccount=function(provider){UsersService.removeSocialAccount(provider).then(onRemoveSocialAccountSuccess).catch(onRemoveSocialAccountError)},vm.callOauthProvider=function(url){url+="?redirect_to="+encodeURIComponent($state.$current.url.prefix),$window.location.href=url}}angular.module("users").controller("SocialAccountsController",SocialAccountsController),SocialAccountsController.$inject=["$state","$window","UsersService","Authentication","Notification"]}();
!function(){"use strict";function SettingsController($scope,Authentication){this.user=Authentication.user}angular.module("users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","Authentication"]}();
!function(){"use strict";function templates($templateCache){$templateCache.put("/modules/chat/client/views/chat.client.view.html",'\x3c!-- The chat view --\x3e\n<section class="container">\n  <div class="page-header">\n    <h1>Chat Example</h1>\n  </div>\n  \x3c!-- The message form --\x3e\n  <form class="col-xs-12 col-md-offset-4 col-md-4" ng-submit="vm.sendMessage();">\n    <fieldset class="row">\n      <div class="input-group">\n        <input type="text" id="messageText" name="messageText" class="form-control" ng-model="vm.messageText" placeholder="Enter new message" autofocus>\n        <span class="input-group-btn">\n          <button type="submit" class="btn btn-primary" ng-disabled="!vm.messageText.length">Submit</button>\n        </span>\n      </div>\n    </fieldset>\n  </form>\n  <ul class="list-unstyled">\n    \x3c!-- List all messages --\x3e\n    <li class="col-xs-12 col-md-offset-4 col-md-4 chat-message" ng-repeat="message in vm.messages">\n      <small class="pull-right text-muted" ng-bind="message.created | date:\'mediumTime\'"></small>\n      <img ng-src="/{{message.profileImageURL}}" alt="{{message.username}}" class="pull-left chat-profile-image" />\n      <div class="pull-left chat-message-details">\n        <strong ng-bind="message.username"></strong>\n        <br>\n        <span ng-bind="message.text"></span>\n      </div>\n    </li>\n  </ul>\n</section>\n'),$templateCache.put("/modules/articles/client/views/articles.client.quiz-view.html",'<section>\n<div class="container">\n\n        \x3c!-- Hook on the controller for this view and specify when to show it using ng-hide --\x3e\n        <div ng-controller="listCtrl as list" ng-hide="list.quizMetrics.quizActive || list.quizMetrics.resultsActive">\n            \x3c!-- top search bar with start quiz button using bootstrap --\x3e\n            <div>\n                <h2 align="center"> Welcome to QuizzY </h2>\n                <div class="well">\n                <button class="btn btn-danger btn-lg btn-block"\n                    ng-click="list.activateQuiz()" >\n                    <strong>Click here to Start Quiz</strong>\n                </button>\n                </div>\n                </div>\n            \n\x3c!--             \x3c!-- row to contain the list of turtles --\x3e\n            \n        </div>\x3c!-- List Controller --\x3e\n\n        \x3c!-- Attach the quizCtrl to the view and ng-show when the quizActive flag is set --\x3e\n        <div ng-controller="quizCtrl as quiz" ng-show="quiz.quizMetrics.quizActive">\n            <div class="row">\n                <div class="col-xs-8">\n                    <h2>Progress:</h2>\n                    <div class="btn-toolbar">\n                        \x3c!-- ng-repeat to loop throuh all questions and display the button markup for each --\x3e\n                        \x3c!-- ng-class conditionally displaying bootstrap classes when a question has been answered or not --\x3e\n                        \x3c!-- ng-click to call method setActiveQuestion to move to selected question --\x3e\n                        \x3c!-- the $index argument is an angular variable that contains the index of the current ng-repeat iteration --\x3e\n                        <button class="btn"\n                            ng-repeat="question in quiz.dataService.quizQuestions"\n                            ng-class="{\'btn-info\': question.selected !== null, \'btn-danger\': question.selected === null}" \n                            ng-click="quiz.setActiveQuestion($index)">\n                            \x3c!-- display glyphicons --\x3e\n                            \x3c!-- ng-class to style glypicons --\x3e\n                            <span class="glyphicon"\n                                ng-class="{\'glyphicon-pencil\': question.selected !== null, \'glyphicon-question-sign\': question.selected === null}"></span>\n                        </button>\n                    </div>\n                </div>\n                <div class="col-xs-4">\n                    <div class="row">\n                        <div class="col-sm-4">\n                            <button class="btn btn-info">\n                                <span class="glyphicon glyphicon-pencil"></span>\n                            </button>\n                            <p>Answered</p>\n                        </div>\n                        <div class="col-sm-4">\n                            <button class="btn btn-danger">\n                                <span class="glyphicon glyphicon-question-sign"></span>\n                            </button>\n                            <p>Unanswered</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\x3c!-- progress area --\x3e\n\n            <div class="row">\n                <div class="alert alert-danger"\n                    ng-show="quiz.error">\n                    Error! You have not answered all of the questions!\n                    <button class="close" ng-click="quiz.error = false">&times</button>\n                </div>\n                <h3>Question:</h3>\n                <div class="well well-sm" ng-hide="quiz.finalise">\n                    <div class="row">\n                        <div class="col-xs-12">\n                            \x3c!-- angular {{}} notation for expressions to be evaluated --\x3e\n                            \x3c!-- adds 1 to activeQuestion as it is zero index. Then displays the question --\x3e\n                            \x3c!-- will be in the form of "3. this is the third question" --\x3e\n                            \x3c!-- where the 3. is the incremented activeQuestion --\x3e\n                            <h4>{{quiz.activeQuestion+1 + ". " + quiz.dataService.quizQuestions[quiz.activeQuestion].question}}</h4>\n                            \x3c!-- ng-if will only render the below markup when true. Unlike ng-show or ng-hide which --\x3e\n                            \x3c!-- simply doesnt show the markup, but it is still rendered in the source. --\x3e\n                            \x3c!-- ng-if will not even render the markup --\x3e\n                            \x3c!-- this is done in the below two sections to aviod a url being displayed as a question --\x3e\n                            \x3c!-- or text being entered as an image url and causing issues --\x3e\n                            <div class="row">\n                                <div class="col-sm-6" ng-repeat="answer in quiz.dataService.quizQuestions[quiz.activeQuestion].options">\n                                    <h4 class="answer"\n                                        ng-class="{\'bg-info\': $index === quiz.dataService.quizQuestions[quiz.activeQuestion].selected}"\n                                        ng-click="quiz.selectAnswer($index)">\n                                        {{answer.option}}\n                                    </h4>\n                                </div>\n                            </div>\n                            \x3c!-- notice the ng-if being used again --\x3e\n                            \x3c!-- only the below section or the above section will display, never both --\x3e\n                            \x3c!-- this will depend on if the current question is set to image or text --\x3e\n                            \x3c!-- <div class="row"\n                                ng-if="quiz.dataService.quizQuestions[quiz.activeQuestion].type === \'image\'"> --\x3e\n                                \x3c!-- more bootstrap and another ng-repeat, this time looping through the possible answers --\x3e\n                                \x3c!-- <div class="col-sm-6" ng-repeat="answer in quiz.dataService.quizQuestions[quiz.activeQuestion].possibilities">\n                                    <div class="image-answer"\n                                        ng-class="{\'image-selected\': $index === quiz.dataService.quizQuestions[quiz.activeQuestion].selected}"\n                                        ng-click="quiz.selectAnswer($index)">\n                                        <img ng-src="{{answer.answer}}">\n                                    </div>\n                                </div>\n                            </div> --\x3e\n\n\n                        </div>\n                    </div>\n                    \x3c!-- ng-click will call the questionAnswered method on the controller --\x3e\n                    <button class="btn btn-warning" ng-click="quiz.questionAnswered()">Continue</button>\n                </div>\n\n                \x3c!-- this section is the prompt to be show when the user finishes the quiz to ensure they want to continue --\x3e\n                \x3c!-- it only shows when the finalise flag is true --\x3e\n                \x3c!-- clicking yes will call the finaliseAnswers method which will send the user to the results page --\x3e\n                \x3c!-- clicking no will remove the finalise flag and this put the user back into the quiz interface --\x3e\n                <div class="well well-sm" ng-show="quiz.finalise">\n                    <div class="row">\n                        <div class="col-xs-12">\n                            <h3>Are you sure you want to submit your answers?</h3>\n                            <button class="btn btn-success" ng-click="quiz.finaliseAnswers()">Yes</button>\n                            <button class="btn btn-danger" ng-click="quiz.finalise = false">No</button>\n                        </div>\n                    </div>\n                </div>\n\n                \n            </div>\x3c!-- question row --\x3e\n        </div>\x3c!-- quiz controller --\x3e\n\n        \x3c!-- letting angular know which controller to use for this view and when to show the view using ng-show --\x3e\n        <div ng-controller="resultsCtrl as results" ng-show="results.quizMetrics.resultsActive">\n           <div class="row">\n               <div class="col-xs-8">\n                   <h2>Results:</h2>\n                   <div class="btn-toolbar">\n                        \x3c!-- ng-repeat used again to loop through the possible answers to thequestions which are stored on --\x3e\n                        \x3c!-- the controller. The controller got that data from the quiz factory in js/factory/quiz.js --\x3e\n\n                        \x3c!-- ng-class is another angular directive. This directive will add a class to the element based  --\x3e\n                        \x3c!-- on the conditional it is provided. In this case it will add btn-sucess class if question.correct --\x3e\n                        \x3c!-- is true and will add btn-danger class if question.correct is false --\x3e\n\n                        \x3c!-- ng-click is again used to trigger a method on the controller called setActiveQuestion --\x3e\n                        \x3c!-- the method is passed the $index as an argument. $index is built into angular and holds --\x3e\n                        \x3c!-- the current index of the ng-repeat loop --\x3e\n                       <button class="btn"\n                           ng-repeat="question in results.dataService.quizQuestions"\n                           ng-class="{\'btn-success\': question.correct, \'btn-danger\': !question.correct}"\n                           ng-click="results.setActiveQuestion($index)">\n                            \x3c!-- display glyphicons --\x3e\n                            \x3c!-- ng-class is utilsed again to style the glyphicons conditionally --\x3e\n                            <span class="glyphicon"\n                                ng-class="{\'glyphicon-ok\': question.correct, \'glyphicon-remove\': !question.correct}"></span>\n                       </button>\n                   </div>\n               </div>\n               <div class="col-xs-4">\n                   <div class="row">\n                       <div class="col-sm-4">\n                           <button class="btn btn-success">\n                               <span class="glyphicon glyphicon-ok"></span>\n                           </button>\n                           <p>Correct</p>\n                       </div>\n                       <div class="col-sm-4">\n                           <button class="btn btn-danger">\n                               <span class="glyphicon glyphicon-remove"></span>\n                           </button>\n                           <p>Incorrect</p>\n                       </div>\n                          \x3c!-- ng-click calling the reset method on the controller --\x3e\n               <button class="btn btn-primary btn-lg" ng-click="results.reset()">Click here to Play Quiz Again</button>\n                   </div>\n               </div>\n           </div>\x3c!-- row --\x3e\n\n            \x3c!-- display the score and percentage to the user --\x3e\n           <div class="row">\n               <div class="col-xs-12 top-buffer">\n                    \x3c!-- the score is displayed using simple angular expressions --\x3e\n                    <h2>You Scored {{results.quizMetrics.numCorrect}} / {{results.dataService.quizQuestions.length}}</h2>\n                    \x3c!-- the percentage is calculated using a method which is then filtered using the number filter --\x3e\n                    \x3c!-- which ensures only 2 decimal places will be shown --\x3e\n                    <h2><strong>{{results.calculatePerc() | number:2}}%</strong></h2>\n               </div>\n           </div>\n\n           <div class="row">\n               <h3>Questions:</h3>\n               <div class="well well-sm">\n                   <div class="row">\n                       <div class="col-xs-12">\n                            \x3c!-- the below may look strange. --\x3e\n                            \x3c!-- the angular expression will add 1 to the active question, because it is 0 index --\x3e\n                            \x3c!-- it then displays it with a . after it followed by the question. --\x3e\n                            \x3c!-- something like this "3. This is the third question:" --\x3e\n                           <h4>{{results.activeQuestion+1 +". "+results.dataService.quizQuestions[results.activeQuestion].question}}</h4>\n                           <div class="row">\n                               \x3c!-- ng-repeat being utilised again --\x3e\n                               <div class="col-sm-6" ng-repeat="answer in results.dataService.quizQuestions[results.activeQuestion].options">\n                                   <h4 class="answer"\n                                       ng-class="results.getAnswerClass($index)">\n                                       {{answer.option}}\n                                       \x3c!-- more usage of the ng-show directive to selectively show the elements on condition --\x3e\n\n                                       <p class="pull-right"\n                                            ng-show="$index !== results.quizMetrics.correctAnswers[results.activeQuestion] && $index === results.dataService.quizQuestions[results.activeQuestion].selected">Your Answer</p>\n                                       <p class="pull-right"\n                                            ng-show="$index === results.quizMetrics.correctAnswers[results.activeQuestion]">Correct Answer</p>\n                                   </h4>\n                               </div>\n                           </div>\x3c!-- row --\x3e\n\n                            \x3c!-- more ng-if --\x3e\n                           \x3c!-- <div class="row"\n                               ng-if="results.dataService.quizQuestions[results.activeQuestion].type === \'image\'">\n                               \x3c!-- more ng-repeat --\x3e\n                               \x3c!-- <div class="col-sm-6" ng-repeat="answer in results.dataService.quizQuestions[results.activeQuestion].possibilities"> --\x3e\n                                    \x3c!-- ng-class and ng-src --\x3e\n                                   \x3c!-- <div class="image-answer"\n                                       ng-class="results.getAnswerClass($index)">\n                                       <img ng-src="{{answer.answer}}">\n                                   </div>\n                               </div>\n                           </div> --\x3e\n\n                       </div>\n                   </div>\n               </div>\x3c!-- well --\x3e\n             \n           </div>\n        </div>\n</div>\n</section>\n'),$templateCache.put("/modules/articles/client/views/view-article.client.view.html","<section>\n\n\n</section>\n"),$templateCache.put("/modules/core/client/views/400.client.view.html",'<div class="page-header">\n  <h1>Bad Request</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">You made a bad request</span>\n</div>\n'),$templateCache.put("/modules/core/client/views/403.client.view.html",'<div class="page-header">\n  <h1>Forbidden</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You are not authorized to access this resource\n</div>\n'),$templateCache.put("/modules/core/client/views/404.client.view.html",'<div class="page-header">\n  <h1>Page Not Found</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">Page Not Found</span>\n</div>\n'),$templateCache.put("/modules/core/client/views/header.client.view.html",'<div class="container" ng-controller="HeaderController as vm">\n  <div class="navbar-header">\n    <button class="navbar-toggle" type="button" ng-click="vm.isCollapsed = !vm.isCollapsed">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n    </button>\n    <a ui-sref="home" class="navbar-brand">QuizzY</a>\n  </div>\n  <nav class="navbar-collapse" uib-collapse="!vm.isCollapsed" role="navigation">\n    <ul class="nav navbar-nav" ng-if="vm.menu.shouldRender(vm.authentication.user);">\n      <li ng-repeat="item in vm.menu.items | orderBy: \'position\'" ng-if="item.shouldRender(vm.authentication.user);" ng-switch="item.type" ng-class="{ dropdown: item.type === \'dropdown\' }" ui-sref-active="active" class="{{item.class}}" uib-dropdown="item.type === \'dropdown\'">\n        <a ng-switch-when="dropdown" class="dropdown-toggle" uib-dropdown-toggle role="button">{{::item.title}}&nbsp;<span class="caret"></span></a>\n        <ul ng-switch-when="dropdown" class="dropdown-menu">\n          <li ng-repeat="subitem in item.items | orderBy: \'position\'" ng-if="subitem.shouldRender(vm.authentication.user);">\n            <a ui-sref="{{subitem.state}}({{subitem.params}})" ng-bind="subitem.title"></a>\n          </li>\n        </ul>\n        <a ng-switch-default ui-sref="{{item.state}}" ng-bind="item.title"></a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-hide="vm.authentication.user">\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signup">Sign Up</a>\n      </li>\n      <li class="divider-vertical"></li>\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signin">Sign In</a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-show="vm.authentication.user">\n      <li class="dropdown" uib-dropdown>\n        <a class="dropdown-toggle user-header-dropdown-toggle" uib-dropdown-toggle role="button">\n          <img ng-src="/{{vm.authentication.user.profileImageURL}}" alt="{{vm.authentication.user.displayName}}" class="header-profile-image" />\n          <span ng-bind="vm.authentication.user.displayName"></span> <b class="caret"></b>\n        </a>\n        <ul class="dropdown-menu" role="menu">\n          <li ui-sref-active="active" ng-repeat="item in vm.accountMenu.items">\n            <a ui-sref="{{item.state}}" ng-bind="item.title"></a>\n          </li>\n          <li class="divider"></li>\n          <li>\n            <a href="/api/auth/signout" target="_self">Signout</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n</div>\n'),$templateCache.put("/modules/core/client/views/home.client.view.html",'<section>\n  <div class="jumbotron text-center">\n    <div class="row">\n      <div class="col-md-6 col-md-offset-3 col-sm-6 col-sm-offset-3 col-xs-12">\n        <img alt="MEAN.JS" class="img-responsive text-center" src="/modules/core/client/img/brand/logo3.gif" />\n      </div>\n    </div>\n    <br>\n    <div class="row">\n      <button class="btn btn-success btn-lg" ui-sref="articles.list">\n        <b>QuizzY</b> Let\'s Play\n      </button>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("/modules/articles/client/views/admin/form-article.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.article._id ? \'Edit Article\' : \'New Article\'}}</h1>\n  </div>\n  <div class="pull-right">\n    <a ng-show="vm.article._id" class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.articleForm" class="form-horizontal" ng-submit="vm.save(vm.form.articleForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="title">Question</label>\n          <input name="title" type="text" ng-model="vm.article.question" id="question" class="form-control" placeholder="question" required autofocus>\n          <div ng-messages="vm.form.articleForm.question.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">question is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n        <label class="control-label" for="options">Insert Options</label><br>\n          <label class="control-label" for="option1">option 1</label>\n          <input name="option" data-ng-model="vm.option1.option" id="option1" class="form-control" cols="30" rows="10" placeholder="option1"></input>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="option2">option 2</label>\n          <input name="option2" data-ng-model="vm.option2.option" id="option2" class="form-control" cols="30" rows="10" placeholder="option2"></input>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="option3">option 3</label>\n          <input name="option" data-ng-model="vm.option3.option" id="option3" class="form-control" cols="30" rows="10" placeholder="option3"></input>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="option4">option 4</label>\n          <input name="option4" data-ng-model="vm.option4.option" id="option4" class="form-control" cols="30" rows="10" placeholder="option4"></input>\n        </div>\n        <div class="form-group">\n        <label for="multipleSelect"> Select Correct Answer(s) : </label><br>\n        <select class="form-control" name="multipleSelect" id="multipleSelect" ng-model="vm.article.correct_answers" multiple>\n          <option value="0">Option 1</option>\n          <option value="1">Option 2</option>\n          <option value="2">Option 3</option>\n          <option value="3">Option 4</option>\n\n          </select>\n          </div>\n\n        <div class="form-group">\n          <button type="submit" class="btn btn-primary">{{vm.article._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("/modules/articles/client/views/admin/list-articles.client.view.html",'<section>\n  <div class="page-header">\n    <h1>\n      Questions For Quiz\n      <a class="btn btn-primary pull-right" data-ui-sref="admin.articles.create">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </h1>\n  </div>\n  <div class="list-group">\n    <a data-ng-repeat="article in vm.articles" data-ui-sref="admin.articles.edit({articleId: article._id})" class="list-group-item">\n      <small class="list-group-item-text">\n        Added on\n        <span data-ng-bind="article.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="article.user" ng-bind="article.user.displayName"></span>\n        <span ng-if="!article.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" data-ng-bind="article.question"></h4>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" data-ng-if="articles.$resolved && !articles.length">\n    No articles yet, why don\'t you <a data-ui-sref="admin.articles.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/admin/edit-user.client.view.html",'<section>\n  <div class="page-header">\n    <h1>User <span ng-bind="vm.user.username"></span></h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.userForm" ng-submit="vm.update(vm.userForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus />\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required />\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="roles">Roles</label>\n          <div class="controls">\n            <input class="form-control" type="text" name="roles" ng-model="vm.user.roles" id="roles" ng-list required />\n            <div ng-messages="vm.userForm.roles.$error" role="alert">\n              <p class="help-block error-text" ng-message="required">At least one role is required.</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <input type="submit" value="Update" class="btn btn-default">\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/admin/list-users.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Users</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="vm.search" placeholder="Search" ng-change="vm.figureOutItemsToDisplay()" />\n      </div>\n    </div>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="user in vm.pagedItems" ui-sref="admin.user({userId: user._id})" class="list-group-item">\n      <h4 class="list-group-item-heading" ng-bind="user.username"></h4>\n      <p class="list-group-item-text pull-right small" ng-bind="user.roles"></p>\n      <p class="list-group-item-text" ng-bind="user.email"></p>\n    </a>\n  </div>\n\n  <uib-pagination boundary-links="true" max-size="8" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></uib-pagination>\n</section>\n'),$templateCache.put("/modules/users/client/views/admin/view-user.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-6">\n        <h1 ng-bind="vm.user.username"></h1>\n      </div>\n      <div class="col-md-4">\n        <a class="btn btn-primary" ui-sref="admin.user-edit({userId: vm.user._id})">\n          <i class="glyphicon glyphicon-edit"></i>\n        </a>\n        <a class="btn btn-primary" ng-click="vm.remove()" ng-if="!vm.isContextUserSelf()">\n          <i class="glyphicon glyphicon-trash"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8">\n      <div class="row">\n        <div class="col-md-3"><strong>First Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.firstName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Last Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.lastName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Email</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.email"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Provider</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.provider"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Created</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.created"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Roles</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.roles"></div>\n      </div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/authentication/authentication.client.view.html",'<section class="row">\n  <div ui-view></div>\n</section>\n'),$templateCache.put("/modules/users/client/views/authentication/signin.client.view.html",'<div>\n  <h3 class="col-xs-12 text-center">Or with your account</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signin(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <uib-alert type="danger" ng-show="vm.error" class="text-center text-danger">\n            <span ng-bind="vm.error"></span>\n          </uib-alert>\n          <label for="usernameOrEmail">Username or Email</label>\n          <input type="text" id="usernameOrEmail" name="usernameOrEmail" class="form-control" ng-model="vm.credentials.usernameOrEmail" placeholder="Username or Email" required autofocus>\n          <div ng-messages="vm.userForm.usernameOrEmail.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username or Email is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n          <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign in</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signup">Sign up</a>\n        </div>\n        <div class="text-center forgot-password">\n          <a ui-sref="password.forgot">Forgot your password?</a>\n        </div>\n        <br />\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("/modules/users/client/views/authentication/signup.client.view.html",'<div>\n  <h3 class="col-xs-12 text-center">Or sign up using your email</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signup(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.credentials.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.credentials.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.credentials.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.credentials.username" ng-pattern="vm.usernameRegex" placeholder="Username" lowercase required>\n          <div ng-messages="vm.userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n            <p class="help-block error-text" ng-message="pattern">Please enter a valid username: 3+ characters long, non restricted word, characters "_-.", no consecutive dots, does not begin or end with dots, letters a-z and numbers 0-9.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n            <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" uib-popover="{{vm.getPopoverMsg()}}" popover-trigger="outsideClick" password-validator required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.userForm.password.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.userForm.password.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign up</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signin" class="show-signup">Sign in</a>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("/modules/users/client/views/password/forgot-password.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Restore your password</h3>\n  <p class="small text-center">Enter your account username.</p>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2">\n    <form name="vm.forgotPasswordForm" ng-submit="vm.askForPasswordReset(vm.forgotPasswordForm.$valid)" class="form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.credentials.username" placeholder="Username" lowercase required autofocus>\n          <div ng-messages="vm.forgotPasswordForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a username.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Submit</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/password/reset-password-invalid.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password reset is invalid</h3>\n  <a ui-sref="password.forgot" class="col-md-12">Ask for a new password reset</a>\n</section>\n'),$templateCache.put("/modules/users/client/views/password/reset-password-success.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password successfully reset</h3>\n  <a ui-sref="home" class="col-md-12">Continue to home page</a>\n</section>\n'),$templateCache.put("/modules/users/client/views/password/reset-password.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Reset your password</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.resetPasswordForm" ng-submit="vm.resetUserPassword(vm.resetPasswordForm.$valid)" class="signin form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" autocomplete="new-password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" uib-popover-placement="top" password-validator required autofocus>\n          <div ng-messages="vm.resetPasswordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.resetPasswordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.resetPasswordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter the password again to verify.</p>\n            <p class="help-block error-text" ng-show="vm.resetPasswordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.resetPasswordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Update Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/settings/change-password.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.passwordForm" ng-submit="vm.changeUserPassword(vm.passwordForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="currentPassword">Current Password</label>\n          <input type="password" id="currentPassword" name="currentPassword" class="form-control" ng-model="vm.passwordDetails.currentPassword" placeholder="Current Password" required autofocus>\n          <div ng-messages="vm.passwordForm.currentPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Your current password is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" password-validator required>\n          <div ng-messages="vm.passwordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.passwordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.passwordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Verify your new password.</p>\n            <p class="help-block error-text" ng-show="vm.passwordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.passwordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/settings/change-profile-picture.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-3 col-md-4">\n    <form class="signin form-horizontal">\n      <fieldset>\n        <div class="form-group text-center">\n          <img ngf-src="vm.fileSelected ? picFile : \'/\' + vm.user.profileImageURL" alt="{{vm.user.displayName}}" class="img-thumbnail user-profile-picture" ngf-drop>\n        </div>\n        <div ng-show="vm.loading" class="form-group text-center">\n          <img ng-src="/modules/core/client/img/loaders/loader.gif" height="50" width="50" alt="Loading image...">\n        </div>\n        <div ng-show="!vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-default btn-file" ngf-select="(vm.fileSelected = true) && (vm.loading = false)" ng-model="picFile" accept="image/*" ngf-before-model-change="vm.loading = true" ngf-resize="{width: 400}" ngf-resize-if="$width > 400 || $height > 400">Select Picture</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-primary" ng-click="vm.upload(picFile)">Use This Picture</button>\n          <button class="btn btn-default" ng-click="vm.fileSelected = false">Cancel</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="progress text-center">\n          <div class="progress-bar" role="progressbar" aria-valuenow="{{vm.progress}}" aria-valuemin="0" aria-valuemax="100" style="width:{{vm.progress}}%" ng-bind="vm.progress + \'%\'">\n            <span class="sr-only">{{vm.progress}}% Complete</span>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/settings/edit-profile.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.updateUserProfile(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.user.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.user.username" placeholder="Username" lowercase required>\n          <div ng-messages="vm.userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Profile</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/settings/manage-social-accounts.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center" ng-show="vm.hasConnectedAdditionalSocialAccounts()">Connected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    \x3c!-- If the user\'s provider field (primary) is a social account, show it here --\x3e\n    <div ng-if="vm.user.provider !== \'local\'" class="social-account-container">\n      <img ng-src="/modules/users/client/img/buttons/{{vm.user.provider}}.png">\n      <i class="glyphicon glyphicon-check text-success user-primary-account" data-toggle="popover" title="Primary: {{vm.user.provider}}"></i>\n    </div>\n    <div ng-repeat="(providerName, providerData) in vm.user.additionalProvidersData" class="social-account-container">\n      <a href ng-click="vm.removeUserSocialAccount(providerName)">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/{{::providerName}}.png">\n        <span class="btn btn-danger btn-add-remove-account">\n          <i class="glyphicon glyphicon-trash"></i>\n        </span>\n      </a>\n    </div>\n  </div>\n  <h3 class="col-md-12 text-center" ng-show="!vm.hasConnectedAdditionalSocialAccounts()">Unconnected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'facebook\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/facebook\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/facebook.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'twitter\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/twitter\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/twitter.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'google\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/google\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/google.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'linkedin\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/linkedin\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/linkedin.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'github\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/github\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/github.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'paypal\')">\n      <a href="" ng-click="vm.callOauthProvider(\'/api/auth/paypal\')">\n        <img class="social-button" ng-src="/modules/users/client/img/buttons/paypal.png">\n        <span class="btn btn-success btn-add-remove-account">\n          <i class="glyphicon glyphicon-plus"></i>\n        </span>\n      </a>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("/modules/users/client/views/settings/settings.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Settings</h1>\n  </div>\n  <div class="row">\n    <nav class="col-sm-3 col-md-3">\n      <ul class="nav nav-pills nav-stacked">\n        <li ui-sref-active="active">\n          <a ui-sref="settings.profile">Edit Profile</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.picture">Change Profile Picture</a>\n        </li>\n        <li ui-sref-active="active" ng-show="vm.user.provider === \'local\'">\n          <a ui-sref="settings.password">Change Password</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.accounts">Manage Social Accounts</a>\n        </li>\n      </ul>\n    </nav>\n    <div class="col-sm-9 col-md-8 settings-view">\n      <div ui-view></div>\n    </div>\n  </div>\n</section>\n')}angular.module("core").run(templates),templates.$inject=["$templateCache"]}();